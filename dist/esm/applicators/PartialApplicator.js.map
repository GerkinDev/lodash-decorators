{"version":3,"file":"PartialApplicator.js","sourceRoot":"","sources":["../../../src/applicators/PartialApplicator.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAoB,MAAM,cAAc,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAE3C;IAAuC,qCAAU;IAAjD;;IAMA,CAAC;IALC,iCAAK,GAAL,UAAM,EAAuD;YAArD,IAAI,UAAA,EAAE,MAAM,YAAA,EAAY,OAAO,oBAAA;QACrC,OAAO;YAAS,oBAAoB;iBAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;gBAApB,+BAAoB;;YAClC,OAAO,OAAO,8BAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,GAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,UAAE,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACnG,CAAC,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAAC,AAND,CAAuC,UAAU,GAMhD","sourcesContent":["import { Applicator, ApplicateOptions } from './Applicator';\nimport { resolveFunction } from '../utils';\n\nexport class PartialApplicator extends Applicator {\n  apply({ args, target, config: { execute } }: ApplicateOptions): any {\n    return function(...invokeArgs: any[]): any {\n      return execute(resolveFunction(args[0], this, target), ...args.slice(1)).apply(this, invokeArgs);\n    };\n  }\n}"]}