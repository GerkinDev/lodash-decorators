{"version":3,"file":"wrapConstructor.js","sourceRoot":"","sources":["../../../src/utils/wrapConstructor.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,IAAM,iBAAiB,GAAG;IACxB,QAAQ;IACR,MAAM;IACN,WAAW;IACX,QAAQ;IACR,WAAW;CACZ,CAAC;AAEF;;;;;;;;GAQG;AACH,MAAM,UAAU,eAAe,CAAC,IAAc,EAAE,OAAgD;IAC9F,SAAS,kBAAkB;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACxC,OAAO,OAAO,CAAC,IAAI,OAAZ,OAAO,iBAAM,IAAI,EAAE,IAAI,GAAK,IAAI,UAAE;IAC3C,CAAC;IAED,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC9C,MAAM,CAAC,cAAc,CAAC,kBAAkB,EAAE,MAAM,EAAE;QAChD,8EAA8E;QAC9E,YAAY,EAAE,IAAI;QAClB,UAAU,EAAE,KAAK;QACjB,KAAK,EAAE,IAAI,CAAC,IAAI;QAChB,QAAQ,EAAE,KAAK;KAChB,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC,kBAAkB,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAC;AAChE,CAAC","sourcesContent":["import { assignAll } from './assignAll';\n\nconst PROPERTY_EXCLUDES = [\n  'length',\n  'name',\n  'arguments',\n  'called',\n  'prototype'\n];\n\n/**\n * Wraps a constructor in a wrapper function and copies all static properties\n * and methods to the new constructor.\n *\n * @export\n * @param {Function} Ctor\n * @param {(Ctor: Function, ...args: any[]) => any} wrapper\n * @returns {Function}\n */\nexport function wrapConstructor(Ctor: Function, wrapper: (Ctor: Function, ...args: any[]) => any): Function {\n  function ConstructorWrapper(...args: any[]) {\n    return wrapper.call(this, Ctor, ...args);\n  }\n\n  ConstructorWrapper.prototype = Ctor.prototype;\n  Object.defineProperty(ConstructorWrapper, 'name', {\n    // These values should coincide with the default descriptor values for `name`.\n    configurable: true,\n    enumerable: false,\n    value: Ctor.name,\n    writable: false\n  });\n\n  return assignAll(ConstructorWrapper, Ctor, PROPERTY_EXCLUDES);\n}\n"]}