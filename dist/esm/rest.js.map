{"version":3,"file":"rest.js","sourceRoot":"","sources":["../../src/rest.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,aAAa,CAAC;AAE/B,OAAO,EAAE,eAAe,EAAE,gBAAgB,EAA2B,MAAM,WAAW,CAAC;AACvF,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AAEnD,MAAM,CAAC,IAAM,IAAI,GAAG,gBAAgB,CAAC,eAAe,CAClD,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,kBAAkB,EAAE,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAC3C,CAAC;AACrC,OAAO,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC;AACxB,eAAe,IAAI,CAAC","sourcesContent":["import rest from 'lodash/rest';\n\nimport { DecoratorConfig, DecoratorFactory, BiTypedMethodDecorator1 } from './factory';\nimport { PreValueApplicator } from './applicators';\n\nexport const Rest = DecoratorFactory.createDecorator(\n  new DecoratorConfig(rest, new PreValueApplicator(), { optionalParams: true })\n) as BiTypedMethodDecorator1<number>;\nexport { Rest as rest };\nexport default Rest;\n"]}