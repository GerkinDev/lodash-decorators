{"version":3,"file":"throttleAll.js","sourceRoot":"","sources":["../../src/throttleAll.ts"],"names":[],"mappings":";;;;AAAA,0EAAuC;AAEvC,qCAAqF;AACrF,6CAAmD;AAGnD,IAAM,SAAS,GAAG,0BAAgB,CAAC,eAAe,CAChD,IAAI,yBAAe,CAAC,kBAAQ,EAAE,IAAI,gCAAkB,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAC1E,CAAC;AACF,SAAgB,WAAW,CAAC,IAAa,EAAE,OAAyB;IAClE,OAAO,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAClC,CAAC;AAFD,kCAEC;AACuB,kCAAW;AACnC,kBAAe,SAAS,CAAC","sourcesContent":["import throttle from 'lodash/throttle';\n\nimport { DecoratorConfig, DecoratorFactory, LodashMethodDecorator } from './factory';\nimport { PreValueApplicator } from './applicators';\nimport { ThrottleOptions } from './shared';\n\nconst decorator = DecoratorFactory.createDecorator(\n  new DecoratorConfig(throttle, new PreValueApplicator(), { setter: true })\n);\nexport function ThrottleAll(wait?: number, options?: ThrottleOptions): LodashMethodDecorator {\n  return decorator(wait, options);\n}\nexport { ThrottleAll as throttleAll };\nexport default decorator;\n"]}