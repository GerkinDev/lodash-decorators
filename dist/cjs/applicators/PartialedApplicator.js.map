{"version":3,"file":"PartialedApplicator.js","sourceRoot":"","sources":["../../../src/applicators/PartialedApplicator.ts"],"names":[],"mappings":";;;;AAAA,wEAAqC;AAErC,2CAA4D;AAE5D;IAAyC,oDAAU;IAAnD;;IAKA,CAAC;IAJC,mCAAK,GAAL,UAAM,EAAsD;YAA1C,OAAO,oBAAA,EAAI,KAAK,WAAA,EAAE,IAAI,UAAA;QACpC,8FAA8F;QAChG,OAAQ,iBAAe,2CAAC,OAAoC,EAAE,KAAK,GAAK,IAAI,UAAE;IAChF,CAAC;IACH,0BAAC;AAAD,CAAC,AALD,CAAyC,uBAAU,GAKlD;AALY,kDAAmB","sourcesContent":["import partial from 'lodash/partial';\n\nimport { Applicator, ApplicateOptions } from './Applicator';\n\nexport class PartialedApplicator extends Applicator {\n  apply({ config: { execute }, value, args }: ApplicateOptions): any {\n      // The `partial` function is over-constrained and generics locks proper use of rest parameter.\n    return (partial as any)(execute as (...argsIn: any[]) => any, value, ...args);\n  }\n}\n"]}